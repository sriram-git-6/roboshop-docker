networks:
  roboshop:
    driver: bridge   # this networks portion will create the network.
volumes:
  mongodb:
  redis:
  mysql:
  rabbitmq:    
services:
  mongodb:
    image: 656788/mongodb:v1
    container_name: mongodb
    networks:
      - roboshop
    volumes:
      - source: mongodb
        target: /data/db
        type: volume  
  catalogue:
    image: 656788/catalogue:v1
    container_name: catalogue
    networks:
      - roboshop
    depends_on:
      - mongodb
  redis:
    image: redis
    container_name: redis
    networks:
      - roboshop
    volumes:
      - source: redis
        target: /data
        type: volume  
  user:
    image: 656788/user:v1
    container_name: user
    networks:
      - roboshop
    depends_on:
      - redis  
      - mongodb    
  cart:
    image: 656788/cart:v1
    container_name: cart
    networks:
      - roboshop
    depends_on:
      - redis
      - catalogue   
  mysql:
    image: 656788/mysql:v1
    container_name: mysql
    networks:
      - roboshop  
    volumes:
      - source: mysql
        target: /var/lib/mysql    
  shipping:
    image: 656788/shipping:v1
    container_name: shipping
    networks:
      - roboshop
    depends_on:
      - cart
      - mysql 
  rabbitmq:
    image: rabbitmq
    container_name: rabbitmq
    networks:
      - roboshop
    volumes:
      - source: rabbitmq
        target: /var/lib/rabbitmq
        type: volume  
    environment:
      - RABBITMQ_DEFAULT_USER=roboshop
      - RABBITMQ_DEFAULT_PASS=roboshop123      
  payment:
    image: 656788/payment:v1
    container_name: payment
    networks:
      - roboshop
    depends_on:
      - cart
      - user
      - rabbitmq                 
  web:
    image: 656788/web:v1
    container_name: web
    networks:
      - roboshop  
    ports: 
      - "80:80"  
    depends_on:
      - catalogue
      - user
      - cart
      - shipping
      - payment       

